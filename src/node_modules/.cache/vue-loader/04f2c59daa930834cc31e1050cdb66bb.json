{"remainingRequest":"C:\\artem\\Work\\test5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\artem\\Work\\test5\\src\\components\\Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\artem\\Work\\test5\\src\\components\\Question.vue","mtime":1551109255732},{"path":"C:\\artem\\Work\\test5\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\artem\\Work\\test5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\artem\\Work\\test5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Timer from './Timer.vue';\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: this.question,\r\n      dataIndex: this.questionIndex,\r\n      openAnswers: '',\r\n      closeAnswers: {\r\n        answer1: '',\r\n        answer2: '',\r\n        answer3: '',\r\n        answer4: '',\r\n        answer5: '',\r\n        answer6: '',\r\n        answer7: '',\r\n        answer8: '',\r\n        answer9: '',\r\n        answer10: '',\r\n        answer11: '',\r\n        answer12: '',\r\n        answer13: '',\r\n        answer14: '',\r\n        answer15: '',\r\n        answer16: '',\r\n        answer17: '',\r\n        answer18: '',\r\n        answer19: '',\r\n        answer20: '',\r\n      },\r\n      isStart: true,\r\n      answerGrade: 0\r\n    }\r\n  },\r\n  components: {\r\n    Timer\r\n  },\r\n  computed: {\r\n    isConfirmQuestion: function() {\r\n      let self = this;\r\n      if (this.data.type === 'openTest') {\r\n        if (this.data.rightAnswers.toLowerCase() === this.openAnswers.toLowerCase()) {\r\n          self.answerGrade = 1;\r\n        }\r\n      }\r\n\r\n      if (this.data.type === 'choiceTest' || this.data.type === 'closeTest') {\r\n        for (let prop in this.closeAnswers) {\r\n          if (this.closeAnswers[prop].toLowerCase() === this.data.rightAnswers[prop].toLowerCase()) {\r\n            self.answerGrade = self.answerGrade + 1;\r\n          }\r\n        }\r\n      }\r\n      return this.answerGrade;\r\n    }\r\n  },\r\n  props: {\r\n    question: {\r\n\r\n    },\r\n    questionIndex: {\r\n      type: Number,\r\n      default: 1\r\n    }\r\n  },\r\n  methods: {\r\n    nextQuestion: function() {\r\n      this.isConfirmQuestion;\r\n      this.$emit('userAnswers', { isGrade: this.answerGrade });\r\n    }\r\n  },\r\n}\r\n\r\n",{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"components","sourcesContent":["<template>\r\n  <div class=\"container p-0\">\r\n    <form class=\"test-form\" @submit.prevent=\"nextQuestion\">\r\n      <div class=\"row\">\r\n        <div class=\"col-10 col-lg-11\">\r\n          <p class=\"test-form__paragraph m-0\">Question {{dataIndex}}</p>\r\n          <h2 class=\"test-form__title m-0\">{{data.text}}</h2>\r\n        </div>\r\n        <div class=\"col-2 col-lg-1 d-flex justify-content-start justify-content-sm-center align-items-center\" v-if=\"data.type == 'openTest'\">\r\n          <timer :autoStart=\"isStart\" :minute=\"1\" @next-step=\"nextQuestion\" />\r\n        </div>\r\n        <div class=\"col-2 col-lg-1 d-flex justify-content-start justify-content-sm-center align-items-center\" v-if=\"data.type == 'closeTest'\">\r\n          <timer :autoStart=\"isStart\" :minute=\"10\" @next-step=\"nextQuestion\" />\r\n        </div>\r\n        <div class=\"col-2 col-lg-1 d-flex justify-content-start justify-content-sm-center align-items-center\" v-if=\"data.type == 'choiceTest'\">\r\n          <timer :autoStart=\"isStart\" :minute=\"10\" @next-step=\"nextQuestion\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-4\" v-if=\"data.type == 'openTest'\">\r\n        <div class=\"col-12 row justify-content-center\">\r\n          <div class=\"col-12 col-md-6 row justify-content-center form-check mb-3\" v-for=\"(item, index) in data.answers\" :key=\"index\">\r\n            <div class=\"col-12 col-md-6 m-auto\">\r\n              <input type=\"radio\" class=\"form-check-input\" :id=\"index\" name=\"materialExampleRadios\" :value=\"item\" v-model=\"openAnswers\">\r\n              <label class=\"form-check-label\" :for=\"index\">{{item\r\n                }}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-4 justify-content-center\" v-if=\"data.type == 'closeTest'\">\r\n        <div class=\"col-12\">\r\n          <p class=\"antonym-list text-center\">{{data.words}}</p>\r\n        </div>\r\n        <div class=\"col-12 d-flex justify-content-center\" v-for=\"(item, index) in data.answers\" :key=\"index\">\r\n          <p class=\"text-center\"><span>{{item[0]}}</span>\r\n            <input type=\"text\" class=\"input-question text-center\" v-model=\"closeAnswers[index]\">\r\n            <span>{{item[1]}}</span>.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-4 justify-content-center\" v-if=\"data.type == 'choiceTest'\">\r\n        <div class=\"col-12\">\r\n          <p class=\"antonym-list text-center\">{{data.words}}</p>\r\n        </div>\r\n        <div class=\"col-12 col-lg-6 row justify-content-center\" v-for=\"(item, index) in data.answers\" :key=\"index\">\r\n          <p><span v-for=\"(word, index) in item\" :key=\"index\">{{word}}, </span></p>\r\n          <input type=\"text\" class=\"input-question text-center mb-2\" v-model=\"closeAnswers[index]\">\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-12 d-flex justify-content-end\">\r\n          <button type=\"submit\" class=\"btn btn-outline-success btn-next\">Next Question</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Timer from './Timer.vue';\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: this.question,\r\n      dataIndex: this.questionIndex,\r\n      openAnswers: '',\r\n      closeAnswers: {\r\n        answer1: '',\r\n        answer2: '',\r\n        answer3: '',\r\n        answer4: '',\r\n        answer5: '',\r\n        answer6: '',\r\n        answer7: '',\r\n        answer8: '',\r\n        answer9: '',\r\n        answer10: '',\r\n        answer11: '',\r\n        answer12: '',\r\n        answer13: '',\r\n        answer14: '',\r\n        answer15: '',\r\n        answer16: '',\r\n        answer17: '',\r\n        answer18: '',\r\n        answer19: '',\r\n        answer20: '',\r\n      },\r\n      isStart: true,\r\n      answerGrade: 0\r\n    }\r\n  },\r\n  components: {\r\n    Timer\r\n  },\r\n  computed: {\r\n    isConfirmQuestion: function() {\r\n      let self = this;\r\n      if (this.data.type === 'openTest') {\r\n        if (this.data.rightAnswers.toLowerCase() === this.openAnswers.toLowerCase()) {\r\n          self.answerGrade = 1;\r\n        }\r\n      }\r\n\r\n      if (this.data.type === 'choiceTest' || this.data.type === 'closeTest') {\r\n        for (let prop in this.closeAnswers) {\r\n          if (this.closeAnswers[prop].toLowerCase() === this.data.rightAnswers[prop].toLowerCase()) {\r\n            self.answerGrade = self.answerGrade + 1;\r\n          }\r\n        }\r\n      }\r\n      return this.answerGrade;\r\n    }\r\n  },\r\n  props: {\r\n    question: {\r\n\r\n    },\r\n    questionIndex: {\r\n      type: Number,\r\n      default: 1\r\n    }\r\n  },\r\n  methods: {\r\n    nextQuestion: function() {\r\n      this.isConfirmQuestion;\r\n      this.$emit('userAnswers', { isGrade: this.answerGrade });\r\n    }\r\n  },\r\n}\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"../scss/form.scss\"\r\n\r\n</style>\r\n"]}]}